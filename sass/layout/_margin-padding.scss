// This file has been autogenerated by grunt task lessToSass. Any changes will be overwritten.

$prefix: '.m', '.mt', '.mb', '.ml', '.mr', '.p', '.pt', '.pb', '.pl', '.pr', '.mx', '.my', '.px', '.py', '.gap' !default;
$viewport: '', sm !default; // Only need default and 'sm' viewport
$values: 0, 5, 10, 15, 20, 50 !default;

// Mixins for margin and padding
@mixin m($value){
    margin: $value !important;
}
@mixin mt($value){
    margin-top: $value !important;
}
@mixin mb($value){
    margin-bottom: $value !important;
}
@mixin ml($value){
    margin-left: $value !important;
}
@mixin mr($value){
    margin-right: $value !important;
}
@mixin p($value){
    padding: $value !important;
}
@mixin pt($value){
    padding-top: $value !important;
}
@mixin pb($value){
    padding-bottom: $value !important;
}
@mixin pl($value){
    padding-left: $value !important;
}
@mixin pr($value){
    padding-right: $value !important;
}
@mixin mx($value){
    margin-left: $value !important;
    margin-right: $value !important;
}
@mixin my($value){
    margin-top: $value !important;
    margin-bottom: $value !important;
}
@mixin px($value){
    padding-left: $value !important;
    padding-right: $value !important;
}
@mixin py($value){
    padding-top: $value !important;
    padding-bottom: $value !important;
}
@mixin gap($value){
    gap: $value !important;
}

// Loop through viewports
@mixin loop-viewports($index) when ($index > 0){
    @include loop-viewports($index - 1);
    $viewport-suffix: extract($viewport, $index) !default;

    // Generate media query for 'sm' viewport
    @if not ($viewport-suffix = '') {
        @media (max-width: $grid-float-breakpoint-max) {
            @include loop-values(length($values), $viewport-suffix);
        }
    }

    // Generate classes without media query for default viewport
    @if ($viewport-suffix = '') {
        @include loop-values(length($values), $viewport-suffix);
    }
}

// Loop through values
@mixin loop-values($index, $viewport-suffix) when ($index > 0){
    @include loop-values($index - 1, $viewport-suffix);
    $value: extract($values, $index) !default;
    $value1: unit($value, px) !default;

    // Generate class names with optional viewport suffix
    @include generate-classes($viewport-suffix, $value, $value1);
}

// Mixin to generate classes with optional viewport suffix
@mixin generate-classes($viewport-suffix, $value, $value1){
    @if ($viewport-suffix = '') {
        .m-#{$value} {
            @include m($value1);
        }
        .mx-#{$value} {
            @include mx($value1);
        }
        .my-#{$value} {
            @include my($value1);
        }
        .mt-#{$value} {
            @include mt($value1);
        }
        .mb-#{$value} {
            @include mb($value1);
        }
        .ml-#{$value} {
            @include ml($value1);
        }
        .mr-#{$value} {
            @include mr($value1);
        }
        .p-#{$value} {
            @include p($value1);
        }
        .px-#{$value} {
            @include px($value1);
        }
        .py-#{$value} {
            @include py($value1);
        }
        .pt-#{$value} {
            @include pt($value1);
        }
        .pb-#{$value} {
            @include pb($value1);
        }
        .pl-#{$value} {
            @include pl($value1);
        }
        .pr-#{$value} {
            @include pr($value1);
        }
        .gap-#{$value} {
            @include gap($value1);
        }
    }

    @if not ($viewport-suffix = '') {
        .m-#{$viewport-suffix}-#{$value} {
            @include m($value1);
        }
        .mx-#{$viewport-suffix}-#{$value} {
            @include mx($value1);
        }
        .my-#{$viewport-suffix}-#{$value} {
            @include my($value1);
        }
        .mt-#{$viewport-suffix}-#{$value} {
            @include mt($value1);
        }
        .mb-#{$viewport-suffix}-#{$value} {
            @include mb($value1);
        }
        .ml-#{$viewport-suffix}-#{$value} {
            @include ml($value1);
        }
        .mr-#{$viewport-suffix}-#{$value} {
            @include mr($value1);
        }
        .p-#{$viewport-suffix}-#{$value} {
            @include p($value1);
        }
        .px-#{$viewport-suffix}-#{$value} {
            @include px($value1);
        }
        .py-#{$viewport-suffix}-#{$value} {
            @include py($value1);
        }
        .pt-#{$viewport-suffix}-#{$value} {
            @include pt($value1);
        }
        .pb-#{$viewport-suffix}-#{$value} {
            @include pb($value1);
        }
        .pl-#{$viewport-suffix}-#{$value} {
            @include pl($value1);
        }
        .pr-#{$viewport-suffix}-#{$value} {
            @include pr($value1);
        }
        .gap-#{$viewport-suffix}-#{$value} {
            @include gap($value1);
        }
    }
}

// Start the loop
@include loop-viewports(length($viewport));